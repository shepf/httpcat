server:
  log:
    applog:
      path: ./log/svr.log
      loglevel: 0
  ssl:
    keyfile: ./conf/server.key
    certfile: ./conf/server.crt
    rawdata_keyfile: ./conf/rd_server.key
    rawdata_certfile: ./conf/rd_server.crt
    cafile: ./conf/ca.crt

  http:
    port: 8888
    auth:
      enable: false
      aksk:
        0376b2a4c481sef5: 60b29se7164027072799f565eb964dxx
    jwt_secret: 164027072799f565eb
    # 需要上传下载大文件，需要设置较长的读写超时,单位s,你上传的时间大于这个时间，就需要调整下面的值
    read_timeout: 1800
    write_timeout: 1800
    idle_timeout: 1800

    ssl:
      enable: false
    file:
      upload_enable: true
      enable_upload_token: true # 是否开启上传专用token验证，开启后支持上传策略upload_policy配置生效
      app_key: "httpcat" # 上传授权的app_key
      app_secret: "httpcat_app_secret" # 上传授权的app_secret
      upload_policy:
        deadline: 7200 # 上传策略有效期，单位秒
        fsizemin: 0 # 上传文件最小值，单位字节
        fsizeLimit: 0 # 上传文件最大值，单位字节
        persistentOps: "" # 上传成功后，触发执行的预转持久化处理指令列表，多个指令用;分隔，例如生成文件md5值。
#        persistent_notify_url: "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1111507-2341-22425-11-4321114236" # 当持久化处理任务完成时，系统会向设置的 persistentNotifyUrl 发送 POST 请求，通知处理结果。您可以将实际的通知 URL 替换成您的有效 URL，以便接收通知。
        persistent_notify_url: "" # 留空“” 不通知，当持久化处理任务完成时，系统会向设置的 persistentNotifyUrl 发送 POST 请求，通知处理结果。
      enable_sqlite: true # 是否开启SQLite数据库存储上传日志
      sqlite_db_path: "./data/httpcat_sqlite.db" # SQLite数据库存储路径


  p2p:
    enable: false
    listen:
      # 在实际生产环境中，通常会更倾向于明确指定要监听的IP地址和端口，以确保安全性和精确控制网络流量的流向。
      ip: 0.0.0.0 # 如果p2p监听ip 0.0.0.0，所有的接口ip都会广播，其他节点可能会看到很多ip；建议修改为本地具体ip，这样其他节点发现该节点时，就只有这个ip，会比较清晰
      port: 9000
    mdns:
      enable: true
      rendezvous: "httpcat" # Unique string to identify group of nodes. Share this with your friends to let them connect with you
    pubsub:
      enable: true
      topic_name: "httpcat" # TopicName to subscribe to. Share this with your friends to let them connect with you




  pprof:
    enable: true
    port: 6753
